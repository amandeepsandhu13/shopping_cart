{"version":3,"sources":["assets/spinner.gif","utils/helpers.js","utils/actions.js","utils/reducers.js","utils/GlobalState.js","components/ProductItem/index.js","utils/queries.js","components/ProductList/index.js","components/CategoryMenu/index.js","components/CartItem/index.js","utils/auth.js","components/Cart/index.js","pages/Home.js","pages/Detail.js","components/Jumbotron/index.js","pages/NoMatch.js","utils/mutations.js","pages/Login.js","pages/Signup.js","components/Nav/index.js","pages/Success.js","pages/OrderHistory.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","idbPromise","storeName","method","object","Promise","resolve","reject","request","window","indexedDB","open","db","tx","store","onupgradeneeded","e","result","createObjectStore","keyPath","onerror","console","log","onsuccess","transaction","objectStore","put","all","getAll","delete","_id","oncomplete","close","reducer","state","action","type","products","cartOpen","cart","product","map","purchaseQuantity","newState","filter","length","categories","currentCategory","StoreContext","createContext","Provider","StoreProvider","_ref","value","props","dispatch","initialState","useReducer","React","createElement","Object","assign","useStoreContext","useContext","ProductItem","item","image","name","price","quantity","className","Link","to","alt","src","count","pluralize","onClick","addToCart","itemInCart","find","cartItem","parseInt","QUERY_PRODUCTS","gql","QUERY_CHECKOUT","QUERY_CATEGORIES","QUERY_USER","ProductList","loading","data","useQuery","useEffect","forEach","then","category","key","spinner","CategoryMenu","categoryData","id","CartItem","placeholder","onChange","target","role","aria-label","removeFromCart","getProfile","decode","this","getToken","loggedIn","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","login","idToken","setItem","location","logout","removeItem","stripePromise","loadStripe","Cart","getCheckout","useLazyQuery","toggleCart","res","redirectToCheckout","sessionId","checkout","session","async","getCart","sum","toFixed","calculateTotal","Auth","productIds","i","push","variables","Home","Detail","useParams","currentProduct","setCurrentProduct","useState","indexedProducts","Fragment","description","disabled","p","Jumbotron","children","style","height","clear","paddingTop","textAlign","NoMatch","LOGIN","ADD_ORDER","ADD_USER","Login","formState","setFormState","email","password","error","useMutation","handleChange","event","onSubmit","preventDefault","htmlFor","Signup","addUser","firstName","lastName","Nav","href","Success","addOrder","setTimeout","saveOrder","OrderHistory","user","orders","order","purchaseDate","toLocaleDateString","index","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","Router","Switch","Route","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.13a7c955.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.ab497855.gif\";","export function pluralize(name, count) {\n  if (count === 1) {\n    return name;\n  }\n  return name + 's';\n}\n\nexport function idbPromise(storeName, method, object) {\n  return new Promise((resolve, reject) => {\n    const request = window.indexedDB.open('shop-shop', 1);\n    let db, tx, store;\n    request.onupgradeneeded = function(e) {\n      const db = request.result;\n      db.createObjectStore('products', { keyPath: '_id' });\n      db.createObjectStore('categories', { keyPath: '_id' });\n      db.createObjectStore('cart', { keyPath: '_id' });\n    };\n\n    request.onerror = function(e) {\n      console.log('There was an error');\n    };\n\n    request.onsuccess = function(e) {\n      db = request.result;\n      tx = db.transaction(storeName, 'readwrite');\n      store = tx.objectStore(storeName);\n\n      db.onerror = function(e) {\n        console.log('error', e);\n      };\n\n      switch (method) {\n        case 'put':\n          store.put(object);\n          resolve(object);\n          break;\n        case 'get':\n          const all = store.getAll();\n          all.onsuccess = function() {\n            resolve(all.result);\n          };\n          break;\n        case 'delete':\n          store.delete(object._id);\n          break;\n        default:\n          console.log('No valid method');\n          break;\n      }\n\n      tx.oncomplete = function() {\n        db.close();\n      };\n    };\n  });\n}\n","export const UPDATE_PRODUCTS = \"UPDATE_PRODUCTS\";\n\nexport const ADD_TO_CART = \"ADD_TO_CART\";\nexport const ADD_MULTIPLE_TO_CART = \"ADD_MULTIPLE_TO_CART\";\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\nexport const CLEAR_CART = \"CLEAR_CART\";\nexport const UPDATE_CART_QUANTITY = \"UPDATE_CART_QUANTITY\";\nexport const TOGGLE_CART = \"TOGGLE_CART\";\n\nexport const UPDATE_CATEGORIES = \"UPDATE_CATEGORIES\";\nexport const UPDATE_CURRENT_CATEGORY = \"UPDATE_CURRENT_CATEGORY\";\n","import { useReducer } from \"react\";\nimport {\n  UPDATE_PRODUCTS,\n  ADD_TO_CART,\n  UPDATE_CART_QUANTITY,\n  REMOVE_FROM_CART,\n  ADD_MULTIPLE_TO_CART,\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n  CLEAR_CART,\n  TOGGLE_CART\n} from \"./actions\";\n\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case UPDATE_PRODUCTS:\n      return {\n        ...state,\n        products: [...action.products],\n      };\n\n    case ADD_TO_CART:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: [...state.cart, action.product],\n      };\n\n    case ADD_MULTIPLE_TO_CART:\n      return {\n        ...state,\n        cart: [...state.cart, ...action.products],\n      };\n\n    case UPDATE_CART_QUANTITY:\n      return {\n        ...state,\n        cartOpen: true,\n        cart: state.cart.map(product => {\n          if (action._id === product._id) {\n            product.purchaseQuantity = action.purchaseQuantity\n          }\n          return product\n        })\n      };\n\n    case REMOVE_FROM_CART:\n      let newState = state.cart.filter(product => {\n        return product._id !== action._id;\n      });\n\n      return {\n        ...state,\n        cartOpen: newState.length > 0,\n        cart: newState\n      };\n\n    case CLEAR_CART:\n      return {\n        ...state,\n        cartOpen: false,\n        cart: []\n      };\n\n    case TOGGLE_CART:\n      return {\n        ...state,\n        cartOpen: !state.cartOpen\n      };\n\n    case UPDATE_CATEGORIES:\n      return {\n        ...state,\n        categories: [...action.categories],\n      };\n\n    case UPDATE_CURRENT_CATEGORY:\n      return {\n        ...state,\n        currentCategory: action.currentCategory\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport function useProductReducer(initialState) {\n  return useReducer(reducer, initialState)\n}","import React, { createContext, useContext } from \"react\";\nimport { useProductReducer } from './reducers'\n\nconst StoreContext = createContext();\nconst { Provider } = StoreContext;\n\nconst StoreProvider = ({ value = [], ...props }) => {\n  const [state, dispatch] = useProductReducer({\n    products: [],\n    cart: [],\n    cartOpen: false,\n    categories: [],\n    currentCategory: '',\n  });\n\n  return <Provider value={[state, dispatch]} {...props} />;\n};\n\nconst useStoreContext = () => {\n  return useContext(StoreContext);\n};\n\nexport { StoreProvider, useStoreContext };\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { pluralize } from \"../../utils/helpers\"\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { ADD_TO_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nfunction ProductItem(item) {\n  const [state, dispatch] = useStoreContext();\n\n  const {\n    image,\n    name,\n    _id,\n    price,\n    quantity\n  } = item;\n\n  const { cart } = state\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === _id)\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: _id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...item, purchaseQuantity: 1 }\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: 1 });\n    }\n  }\n\n  return (\n    <div className=\"card px-1 py-1\">\n      <Link to={`/products/${_id}`}>\n        <img\n          alt={name}\n          src={`/images/${image}`}\n        />\n        <p>{name}</p>\n      </Link>\n      <div>\n        <div>{quantity} {pluralize(\"item\", quantity)} in stock</div>\n        <span>${price}</span>\n      </div>\n      <button onClick={addToCart}>Add to cart</button>\n    </div>\n  );\n}\n\nexport default ProductItem;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_PRODUCTS = gql`\n  query getProducts($category: ID) {\n    products(category: $category) {\n      _id\n      name\n      description\n      price\n      quantity\n      image\n      category {\n        _id\n      }\n    }\n  }\n`;\n\nexport const QUERY_CHECKOUT = gql`\n  query getCheckout($products: [ID]!) {\n    checkout(products: $products) {\n      session\n    }\n  }\n`;\n\nexport const QUERY_ALL_PRODUCTS = gql`\n  {\n    products {\n      _id\n      name\n      description\n      price\n      quantity\n      category {\n        name\n      }\n    }\n  }\n`;\n\nexport const QUERY_CATEGORIES = gql`\n  {\n    categories {\n      _id\n      name\n    }\n  }\n`;\n\nexport const QUERY_USER = gql`\n  {\n    user {\n      firstName\n      lastName\n      orders {\n        _id\n        purchaseDate\n        products {\n          _id\n          name\n          description\n          price\n          quantity\n          image\n        }\n      }\n    }\n  }\n`;\n","import React, { useEffect } from 'react';\nimport ProductItem from '../ProductItem';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { UPDATE_PRODUCTS } from '../../utils/actions';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_PRODUCTS } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport spinner from '../../assets/spinner.gif';\n\nfunction ProductList() {\n  const [state, dispatch] = useStoreContext();\n\n  const { currentCategory } = state;\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  useEffect(() => {\n    if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    } else if (!loading) {\n      idbPromise('products', 'get').then((products) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: products,\n        });\n      });\n    }\n  }, [data, loading, dispatch]);\n\n  function filterProducts() {\n    if (!currentCategory) {\n      return state.products;\n    }\n\n    return state.products.filter(\n      (product) => product.category._id === currentCategory\n    );\n  }\n\n  return (\n    <div className=\"my-2\">\n      <h2>Our Products:</h2>\n      {state.products.length ? (\n        <div className=\"flex-row\">\n          {filterProducts().map((product) => (\n            <ProductItem\n              key={product._id}\n              _id={product._id}\n              image={product.image}\n              name={product.name}\n              price={product.price}\n              quantity={product.quantity}\n            />\n          ))}\n        </div>\n      ) : (\n        <h3>You haven't added any products yet!</h3>\n      )}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n    </div>\n  );\n}\n\nexport default ProductList;\n","import React, { useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport {\n  UPDATE_CATEGORIES,\n  UPDATE_CURRENT_CATEGORY,\n} from '../../utils/actions';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\n\nfunction CategoryMenu() {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n\n  const { loading, data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    if (categoryData) {\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories,\n      });\n      categoryData.categories.forEach((category) => {\n        idbPromise('categories', 'put', category);\n      });\n    } else if (!loading) {\n      idbPromise('categories', 'get').then((categories) => {\n        dispatch({\n          type: UPDATE_CATEGORIES,\n          categories: categories,\n        });\n      });\n    }\n  }, [categoryData, loading, dispatch]);\n\n  const handleClick = (id) => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id,\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n","import React from 'react';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport { REMOVE_FROM_CART, UPDATE_CART_QUANTITY } from \"../../utils/actions\";\nimport { idbPromise } from \"../../utils/helpers\";\n\nconst CartItem = ({ item }) => {\n\n  const [, dispatch] = useStoreContext();\n\n  const removeFromCart = item => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: item._id\n    });\n    idbPromise('cart', 'delete', { ...item });\n\n  };\n\n  const onChange = (e) => {\n    const value = e.target.value;\n    if (value === '0') {\n      dispatch({\n        type: REMOVE_FROM_CART,\n        _id: item._id\n      });\n      idbPromise('cart', 'delete', { ...item });\n\n    } else {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: item._id,\n        purchaseQuantity: parseInt(value)\n      });\n      idbPromise('cart', 'put', { ...item, purchaseQuantity: parseInt(value) });\n\n    }\n  }\n\n  return (\n    <div className=\"flex-row\">\n      <div>\n        <img\n          src={`/images/${item.image}`}\n          alt=\"\"\n        />\n      </div>\n      <div>\n        <div>{item.name}, ${item.price}</div>\n        <div>\n          <span>Qty:</span>\n          <input\n            type=\"number\"\n            placeholder=\"1\"\n            value={item.purchaseQuantity}\n            onChange={onChange}\n          />\n          <span\n            role=\"img\"\n            aria-label=\"trash\"\n            onClick={() => removeFromCart(item)}\n          >\n            🗑️\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default CartItem;","import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React, { useEffect } from 'react';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { useLazyQuery } from '@apollo/client';\nimport { QUERY_CHECKOUT } from '../../utils/queries';\nimport { idbPromise } from '../../utils/helpers';\nimport CartItem from '../CartItem';\nimport Auth from '../../utils/auth';\nimport { useStoreContext } from '../../utils/GlobalState';\nimport { TOGGLE_CART, ADD_MULTIPLE_TO_CART } from '../../utils/actions';\nimport './style.css';\n\nconst stripePromise = loadStripe('pk_test_TYooMQauvdEDq54NiTphI7jx');\n\nconst Cart = () => {\n  const [state, dispatch] = useStoreContext();\n  const [getCheckout, { data }] = useLazyQuery(QUERY_CHECKOUT);\n\n  useEffect(() => {\n    if (data) {\n      stripePromise.then((res) => {\n        res.redirectToCheckout({ sessionId: data.checkout.session });\n      });\n    }\n  }, [data]);\n\n  useEffect(() => {\n    async function getCart() {\n      const cart = await idbPromise('cart', 'get');\n      dispatch({ type: ADD_MULTIPLE_TO_CART, products: [...cart] });\n    }\n\n    if (!state.cart.length) {\n      getCart();\n    }\n  }, [state.cart.length, dispatch]);\n\n  function toggleCart() {\n    dispatch({ type: TOGGLE_CART });\n  }\n\n  function calculateTotal() {\n    let sum = 0;\n    state.cart.forEach((item) => {\n      sum += item.price * item.purchaseQuantity;\n    });\n    return sum.toFixed(2);\n  }\n\n  function submitCheckout() {\n    const productIds = [];\n\n    state.cart.forEach((item) => {\n      for (let i = 0; i < item.purchaseQuantity; i++) {\n        productIds.push(item._id);\n      }\n    });\n\n    getCheckout({\n      variables: { products: productIds },\n    });\n  }\n\n  if (!state.cartOpen) {\n    return (\n      <div className=\"cart-closed\" onClick={toggleCart}>\n        <span role=\"img\" aria-label=\"trash\">\n          🛒\n        </span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"cart\">\n      <div className=\"close\" onClick={toggleCart}>\n        [close]\n      </div>\n      <h2>Shopping Cart</h2>\n      {state.cart.length ? (\n        <div>\n          {state.cart.map((item) => (\n            <CartItem key={item._id} item={item} />\n          ))}\n\n          <div className=\"flex-row space-between\">\n            <strong>Total: ${calculateTotal()}</strong>\n\n            {Auth.loggedIn() ? (\n              <button onClick={submitCheckout}>Checkout</button>\n            ) : (\n              <span>(log in to check out)</span>\n            )}\n          </div>\n        </div>\n      ) : (\n        <h3>\n          <span role=\"img\" aria-label=\"shocked\">\n            😱\n          </span>\n          You haven't added anything to your cart yet!\n        </h3>\n      )}\n    </div>\n  );\n};\n\nexport default Cart;\n","import React from \"react\";\nimport ProductList from \"../components/ProductList\";\nimport CategoryMenu from \"../components/CategoryMenu\";\nimport Cart from \"../components/Cart\";\n\nconst Home = () => {\n  return (\n    <div className=\"container\">\n      <CategoryMenu />\n      <ProductList />\n      <Cart />\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n\nimport Cart from '../components/Cart';\nimport { useStoreContext } from '../utils/GlobalState';\nimport {\n  REMOVE_FROM_CART,\n  UPDATE_CART_QUANTITY,\n  ADD_TO_CART,\n  UPDATE_PRODUCTS,\n} from '../utils/actions';\nimport { QUERY_PRODUCTS } from '../utils/queries';\nimport { idbPromise } from '../utils/helpers';\nimport spinner from '../assets/spinner.gif';\n\nfunction Detail() {\n  const [state, dispatch] = useStoreContext();\n  const { id } = useParams();\n\n  const [currentProduct, setCurrentProduct] = useState({});\n\n  const { loading, data } = useQuery(QUERY_PRODUCTS);\n\n  const { products, cart } = state;\n\n  useEffect(() => {\n    // already in global store\n    if (products.length) {\n      setCurrentProduct(products.find((product) => product._id === id));\n    }\n    // retrieved from server\n    else if (data) {\n      dispatch({\n        type: UPDATE_PRODUCTS,\n        products: data.products,\n      });\n\n      data.products.forEach((product) => {\n        idbPromise('products', 'put', product);\n      });\n    }\n    // get cache from idb\n    else if (!loading) {\n      idbPromise('products', 'get').then((indexedProducts) => {\n        dispatch({\n          type: UPDATE_PRODUCTS,\n          products: indexedProducts,\n        });\n      });\n    }\n  }, [products, data, loading, dispatch, id]);\n\n  const addToCart = () => {\n    const itemInCart = cart.find((cartItem) => cartItem._id === id);\n    if (itemInCart) {\n      dispatch({\n        type: UPDATE_CART_QUANTITY,\n        _id: id,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n      idbPromise('cart', 'put', {\n        ...itemInCart,\n        purchaseQuantity: parseInt(itemInCart.purchaseQuantity) + 1,\n      });\n    } else {\n      dispatch({\n        type: ADD_TO_CART,\n        product: { ...currentProduct, purchaseQuantity: 1 },\n      });\n      idbPromise('cart', 'put', { ...currentProduct, purchaseQuantity: 1 });\n    }\n  };\n\n  const removeFromCart = () => {\n    dispatch({\n      type: REMOVE_FROM_CART,\n      _id: currentProduct._id,\n    });\n\n    idbPromise('cart', 'delete', { ...currentProduct });\n  };\n\n  return (\n    <>\n      {currentProduct && cart ? (\n        <div className=\"container my-1\">\n          <Link to=\"/\">← Back to Products</Link>\n\n          <h2>{currentProduct.name}</h2>\n\n          <p>{currentProduct.description}</p>\n\n          <p>\n            <strong>Price:</strong>${currentProduct.price}{' '}\n            <button onClick={addToCart}>Add to Cart</button>\n            <button\n              disabled={!cart.find((p) => p._id === currentProduct._id)}\n              onClick={removeFromCart}\n            >\n              Remove from Cart\n            </button>\n          </p>\n\n          <img\n            src={`/images/${currentProduct.image}`}\n            alt={currentProduct.name}\n          />\n        </div>\n      ) : null}\n      {loading ? <img src={spinner} alt=\"loading\" /> : null}\n      <Cart />\n    </>\n  );\n}\n\nexport default Detail;\n","import React from \"react\";\n\nfunction Jumbotron({ children }) {\n  return (\n    <div\n      style={{ height: 560, clear: \"both\", paddingTop: 120, textAlign: \"center\" }}\n    >\n      {children}\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\n\nconst NoMatch = () => {\n  return (\n    <div>\n      <Jumbotron>\n        <h1>404 Page Not Found</h1>\n        <h1>\n          <span role=\"img\" aria-label=\"Face With Rolling Eyes Emoji\">\n            🙄\n          </span>\n        </h1>\n      </Jumbotron>\n    </div>\n  );\n};\n\nexport default NoMatch;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n\nexport const ADD_ORDER = gql`\n  mutation addOrder($products: [ID]!) {\n    addOrder(products: $products) {\n      purchaseDate\n      products {\n        _id\n        name\n        description\n        price\n        quantity\n        category {\n          name\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser(\n    $firstName: String!\n    $lastName: String!\n    $email: String!\n    $password: String!\n  ) {\n    addUser(\n      firstName: $firstName\n      lastName: $lastName\n      email: $email\n      password: $password\n    ) {\n      token\n      user {\n        _id\n      }\n    }\n  }\n`;\n","import React, { useState } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { Link } from 'react-router-dom';\nimport { LOGIN } from '../utils/mutations';\nimport Auth from '../utils/auth';\n\nfunction Login(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: { email: formState.email, password: formState.password },\n      });\n      const token = mutationResponse.data.login.token;\n      Auth.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/signup\">← Go to Signup</Link>\n\n      <h2>Login</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email address:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        {error ? (\n          <div>\n            <p className=\"error-text\">The provided credentials are incorrect</p>\n          </div>\n        ) : null}\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\nimport { ADD_USER } from '../utils/mutations';\n\nfunction Signup(props) {\n  const [formState, setFormState] = useState({ email: '', password: '' });\n  const [addUser] = useMutation(ADD_USER);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        email: formState.email,\n        password: formState.password,\n        firstName: formState.firstName,\n        lastName: formState.lastName,\n      },\n    });\n    const token = mutationResponse.data.addUser.token;\n    Auth.login(token);\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormState({\n      ...formState,\n      [name]: value,\n    });\n  };\n\n  return (\n    <div className=\"container my-1\">\n      <Link to=\"/login\">← Go to Login</Link>\n\n      <h2>Signup</h2>\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"firstName\">First Name:</label>\n          <input\n            placeholder=\"First\"\n            name=\"firstName\"\n            type=\"firstName\"\n            id=\"firstName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"lastName\">Last Name:</label>\n          <input\n            placeholder=\"Last\"\n            name=\"lastName\"\n            type=\"lastName\"\n            id=\"lastName\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"email\">Email:</label>\n          <input\n            placeholder=\"youremail@test.com\"\n            name=\"email\"\n            type=\"email\"\n            id=\"email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row space-between my-2\">\n          <label htmlFor=\"pwd\">Password:</label>\n          <input\n            placeholder=\"******\"\n            name=\"password\"\n            type=\"password\"\n            id=\"pwd\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex-row flex-end\">\n          <button type=\"submit\">Submit</button>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default Signup;\n","import React from \"react\";\nimport Auth from \"../../utils/auth\";\nimport { Link } from \"react-router-dom\";\n\nfunction Nav() {\n\n  function showNavigation() {\n    if (Auth.loggedIn()) {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/orderHistory\">\n              Order History\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            {/* this is not using the Link component to logout or user and then refresh the application to the start */}\n            <a href=\"/\" onClick={() => Auth.logout()}>\n              Logout\n            </a>\n          </li>\n        </ul>\n      );\n    } else {\n      return (\n        <ul className=\"flex-row\">\n          <li className=\"mx-1\">\n            <Link to=\"/signup\">\n              Signup\n            </Link>\n          </li>\n          <li className=\"mx-1\">\n            <Link to=\"/login\">\n              Login\n            </Link>\n          </li>\n        </ul>\n      );\n    }\n  }\n\n  return (\n    <header className=\"flex-row px-1\">\n      <h1>\n        <Link to=\"/\">\n          <span role=\"img\" aria-label=\"shopping bag\">🛍️</span>\n          -Shop-Shop\n        </Link>\n      </h1>\n\n      <nav>\n        {showNavigation()}\n      </nav>\n    </header>\n  );\n}\n\nexport default Nav;\n","import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/client';\nimport Jumbotron from '../components/Jumbotron';\nimport { ADD_ORDER } from '../utils/mutations';\nimport { idbPromise } from '../utils/helpers';\n\nfunction Success() {\n  const [addOrder] = useMutation(ADD_ORDER);\n\n  useEffect(() => {\n    async function saveOrder() {\n      const cart = await idbPromise('cart', 'get');\n      const products = cart.map((item) => item._id);\n\n      if (products.length) {\n        const { data } = await addOrder({ variables: { products } });\n        const productData = data.addOrder.products;\n\n        productData.forEach((item) => {\n          idbPromise('cart', 'delete', item);\n        });\n      }\n\n      setTimeout(() => {\n        window.location.assign('/');\n      }, 3000);\n    }\n\n    saveOrder();\n  }, [addOrder]);\n\n  return (\n    <div>\n      <Jumbotron>\n        <h1>Success!</h1>\n        <h2>Thank you for your purchase!</h2>\n        <h2>You will now be redirected to the home page</h2>\n      </Jumbotron>\n    </div>\n  );\n}\n\nexport default Success;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport { useQuery } from '@apollo/client';\nimport { QUERY_USER } from '../utils/queries';\n\nfunction OrderHistory() {\n  const { data } = useQuery(QUERY_USER);\n  let user;\n\n  if (data) {\n    user = data.user;\n  }\n\n  return (\n    <>\n      <div className=\"container my-1\">\n        <Link to=\"/\">← Back to Products</Link>\n\n        {user ? (\n          <>\n            <h2>\n              Order History for {user.firstName} {user.lastName}\n            </h2>\n            {user.orders.map((order) => (\n              <div key={order._id} className=\"my-2\">\n                <h3>\n                  {new Date(parseInt(order.purchaseDate)).toLocaleDateString()}\n                </h3>\n                <div className=\"flex-row\">\n                  {order.products.map(({ _id, image, name, price }, index) => (\n                    <div key={index} className=\"card px-1 py-1\">\n                      <Link to={`/products/${_id}`}>\n                        <img alt={name} src={`/images/${image}`} />\n                        <p>{name}</p>\n                      </Link>\n                      <div>\n                        <span>${price}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ))}\n          </>\n        ) : null}\n      </div>\n    </>\n  );\n}\n\nexport default OrderHistory;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\nimport Home from './pages/Home';\nimport Detail from './pages/Detail';\nimport NoMatch from './pages/NoMatch';\nimport Login from './pages/Login';\nimport Signup from './pages/Signup';\nimport Nav from './components/Nav';\nimport { StoreProvider } from './utils/GlobalState';\nimport Success from './pages/Success';\nimport OrderHistory from './pages/OrderHistory';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div>\n          <StoreProvider>\n            <Nav />\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/signup\" component={Signup} />\n              <Route exact path=\"/success\" component={Success} />\n              <Route exact path=\"/orderHistory\" component={OrderHistory} />\n              <Route exact path=\"/products/:id\" component={Detail} />\n              <Route component={NoMatch} />\n            </Switch>\n          </StoreProvider>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.0/8 are considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport function register(config) {\n  if (\n    process.env.NODE_ENV === 'production' &&\n    'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}